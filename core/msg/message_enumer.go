// Code generated by "enumer -type=Message"; DO NOT EDIT.

//
package msg

import (
	"fmt"
)

const _MessageName = "ErrorWarnAvailableVersionReleaseNotesBatteryConfiguredBatteryPowerBatterySoCGridConfiguredGridCurrentsGridPowerPrioritySoCPvConfiguredPvPowerSiteTitleActivePhasesChargeConfiguredChargeCurrentChargeCurrentsChargedEnergyChargeDurationChargeEstimateChargePowerChargeRemainingEnergyChargingClimaterConnectedConnectedDurationEnabledHasVehicleMaxCurrentMinCurrentMinSoCModePhasesRangeRemoteDisabledRemoteDisabledSourceSocCapacitySocChargeSocLevelsSocTitleTargetSoCTargetTimeTimerActiveTimerSetTitle"

var _MessageIndex = [...]uint16{0, 5, 9, 25, 37, 54, 66, 76, 90, 102, 111, 122, 134, 141, 150, 162, 178, 191, 205, 218, 232, 246, 257, 278, 286, 294, 303, 320, 327, 337, 347, 357, 363, 367, 373, 378, 392, 412, 423, 432, 441, 449, 458, 468, 479, 487, 492}

func (i Message) String() string {
	i -= 1
	if i < 0 || i >= Message(len(_MessageIndex)-1) {
		return fmt.Sprintf("Message(%d)", i+1)
	}
	return _MessageName[_MessageIndex[i]:_MessageIndex[i+1]]
}

var _MessageValues = []Message{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46}

var _MessageNameToValueMap = map[string]Message{
	_MessageName[0:5]:     1,
	_MessageName[5:9]:     2,
	_MessageName[9:25]:    3,
	_MessageName[25:37]:   4,
	_MessageName[37:54]:   5,
	_MessageName[54:66]:   6,
	_MessageName[66:76]:   7,
	_MessageName[76:90]:   8,
	_MessageName[90:102]:  9,
	_MessageName[102:111]: 10,
	_MessageName[111:122]: 11,
	_MessageName[122:134]: 12,
	_MessageName[134:141]: 13,
	_MessageName[141:150]: 14,
	_MessageName[150:162]: 15,
	_MessageName[162:178]: 16,
	_MessageName[178:191]: 17,
	_MessageName[191:205]: 18,
	_MessageName[205:218]: 19,
	_MessageName[218:232]: 20,
	_MessageName[232:246]: 21,
	_MessageName[246:257]: 22,
	_MessageName[257:278]: 23,
	_MessageName[278:286]: 24,
	_MessageName[286:294]: 25,
	_MessageName[294:303]: 26,
	_MessageName[303:320]: 27,
	_MessageName[320:327]: 28,
	_MessageName[327:337]: 29,
	_MessageName[337:347]: 30,
	_MessageName[347:357]: 31,
	_MessageName[357:363]: 32,
	_MessageName[363:367]: 33,
	_MessageName[367:373]: 34,
	_MessageName[373:378]: 35,
	_MessageName[378:392]: 36,
	_MessageName[392:412]: 37,
	_MessageName[412:423]: 38,
	_MessageName[423:432]: 39,
	_MessageName[432:441]: 40,
	_MessageName[441:449]: 41,
	_MessageName[449:458]: 42,
	_MessageName[458:468]: 43,
	_MessageName[468:479]: 44,
	_MessageName[479:487]: 45,
	_MessageName[487:492]: 46,
}

// MessageString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func MessageString(s string) (Message, error) {
	if val, ok := _MessageNameToValueMap[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to Message values", s)
}

// MessageValues returns all values of the enum
func MessageValues() []Message {
	return _MessageValues
}

// IsAMessage returns "true" if the value is listed in the enum definition. "false" otherwise
func (i Message) IsAMessage() bool {
	for _, v := range _MessageValues {
		if i == v {
			return true
		}
	}
	return false
}
